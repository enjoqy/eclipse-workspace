package cn.kgc.utlis;

import java.time.LocalDateTime;
import java.time.Month;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Scanner;

import org.junit.Test;

/**
 * 打印指定月份的日期
 * 
 * @author zhuhao
 * @date 2019年3月26日
 */
public class PrintDate {
	
	public static void main(String[] args) {
		
//		Scanner input = new Scanner(System.in);
//		
//		System.out.println("请输入指定年份：");
//		int year = input.nextInt();
		
//		System.out.println("请输入指定月份：");
//		int month = input.nextInt();
//		
//		System.out.println(date);
		
//		Calendar calendar = Calendar.getInstance();
//		int date = Calendar.DATE;       //这里有疑问，稍后再整
//		System.out.println(date);
		
		
		/*//获得指定月份的天数
		int month = 3;
		int year = 2019;
		calendar.set(Calendar.MONTH, month - 1);
		calendar.set(Calendar.YEAR, year);
		int actualMaximum = calendar.getActualMaximum(Calendar.DATE);
//		System.out.println(actualMaximum);
		
		//获得指定月份1号对应的星期
		int dayOfWeek = Calendar.DAY_OF_WEEK;
		System.out.println(dayOfWeek);*/
		
		String tmp = "yyyy-MM-dd";
		Date date = new Date();
		
		
		Calendar calendar = new GregorianCalendar();
		int actualMaximum = calendar.getActualMaximum(Calendar.DATE);
		
//		calendar.setTime(date);
		//获得指定月份1号对应的星期
		calendar.set(Calendar.DAY_OF_MONTH, 1);
		int i1 = calendar.get(Calendar.DAY_OF_WEEK) - 1;
		System.out.println(i1);
		
		System.out.println(actualMaximum);
		
		System.out.println("周日\t周一\t周二\t周三\t周四\t周五\t周六\n");
		
		for(int i=1; i<=actualMaximum; i++) {
			for (int j = 0; j < i1; j++) {
				System.out.print("\t");
			}
			
			System.out.print(i + "\t");
			if(i%7 == 0 ) { 
				System.out.println("\n");
			}
		}
		
	}
	
	/*@Test
	public void test() {
		Calendar calendar = Calendar.getInstance();
//		calendar.setTime(new Date());
//		int firstDayOfWeek = calendar.get(Calendar.getFirstDayOfWeek());
		int dayOfWeek = calendar.get(Calendar.DAY_OF_WEEK);
		System.out.println(dayOfWeek);
		int firstDayOfWeek = calendar.getFirstDayOfWeek();
		int i = calendar.get(firstDayOfWeek);
		System.out.println(firstDayOfWeek);
		System.out.println(i);
	}
	
	@Test
	public void test1() {
		LocalDateTime ldt = LocalDateTime.now();
		System.out.println(ldt);
		ldt.getDayOfMonth();
		ldt.getDayOfYear();
		ldt.getYear();
		System.out.println(ldt.getYear());
	}
*/
}
